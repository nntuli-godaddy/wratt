import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import createCache from '@emotion/cache';
var isBrowser = typeof document !== 'undefined';

// On the client side, Create a meta tag at the top of the <head> and set it as insertionPoint.
// This assures that MUI styles are loaded first.
// It allows developers to easily override MUI styles with other styling solutions, like CSS modules.
export default function createEmotionCache(options) {
  var insertionPoint;
  if (isBrowser) {
    var emotionInsertionPoint = document.querySelector('meta[name="emotion-insertion-point"]');
    insertionPoint = emotionInsertionPoint != null ? emotionInsertionPoint : undefined;
  }
  var _ref = options != null ? options : {},
    enableCssLayer = _ref.enableCssLayer,
    rest = _objectWithoutProperties(_ref, ["enableCssLayer"]);
  var emotionCache = createCache(_extends({
    key: 'mui',
    insertionPoint: insertionPoint
  }, rest));
  if (enableCssLayer) {
    var prevInsert = emotionCache.insert;
    emotionCache.insert = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      // ignore styles that contain layer order (`@layer ...` without `{`)
      if (!args[1].styles.match(/^@layer\s+[^{]*$/)) {
        args[1].styles = "@layer mui {".concat(args[1].styles, "}");
      }
      return prevInsert.apply(void 0, args);
    };
  }
  return emotionCache;
}