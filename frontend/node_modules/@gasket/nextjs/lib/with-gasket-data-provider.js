"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withGasketDataProvider = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _react = _interopRequireDefault(require("react"));
var _gasketDataProvider = require("./gasket-data-provider");
var _excluded = ["gasketData"];
var __jsx = _react["default"].createElement;
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2["default"])(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var clientGasketData = typeof window === 'object' ? require('@gasket/data') : {};

/**
 * Make an HOC that adds a provider for the GasketData. This can be used to wrap
 * a top level React, Next.js custom App component or Next.js custom Document
 * component.
 * @returns {Function} wrapper
 */
var withGasketDataProvider = function withGasketDataProvider() {
  return function (WrappedComponent) {
    var Wrapper = function Wrapper(_ref) {
      var gasketData = _ref.gasketData,
        props = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
      return __jsx(_gasketDataProvider.GasketDataProvider, {
        gasketData: gasketData
      }, __jsx(WrappedComponent, props));
    };
    Wrapper.getInitialProps = /*#__PURE__*/function () {
      var _ref2 = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(data) {
        var _data$ctx, _data$ctx$res, _data$ctx$res$locals, _data$res, _data$res$locals;
        var initialProps, ssrGasketData;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!WrappedComponent.getInitialProps) {
                  _context.next = 6;
                  break;
                }
                _context.next = 3;
                return WrappedComponent.getInitialProps(data);
              case 3:
                _context.t0 = _context.sent;
                _context.next = 7;
                break;
              case 6:
                _context.t0 = {};
              case 7:
                initialProps = _context.t0;
                ssrGasketData = (data === null || data === void 0 ? void 0 : (_data$ctx = data.ctx) === null || _data$ctx === void 0 ? void 0 : (_data$ctx$res = _data$ctx.res) === null || _data$ctx$res === void 0 ? void 0 : (_data$ctx$res$locals = _data$ctx$res.locals) === null || _data$ctx$res$locals === void 0 ? void 0 : _data$ctx$res$locals.gasketData) || (data === null || data === void 0 ? void 0 : (_data$res = data.res) === null || _data$res === void 0 ? void 0 : (_data$res$locals = _data$res.locals) === null || _data$res$locals === void 0 ? void 0 : _data$res$locals.gasketData) || {};
                return _context.abrupt("return", _objectSpread(_objectSpread({}, initialProps), {}, {
                  gasketData: _objectSpread(_objectSpread({}, ssrGasketData), clientGasketData)
                }));
              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }));
      return function (_x) {
        return _ref2.apply(this, arguments);
      };
    }();
    return Wrapper;
  };
};
exports.withGasketDataProvider = withGasketDataProvider;